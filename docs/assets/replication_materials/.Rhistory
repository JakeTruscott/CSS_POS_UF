theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(size = 12, colour = 'black'),
axis.text = element_text(size = 10, colour = 'black'),
panel.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
legend.position = 'bottom',
legend.background = element_rect(linewidth = 1, colour = 'black', fill = NA)
)
data.frame(side = sample(c('heads', 'tails'), size = 10, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') +
default_ggplot_theme
data.frame(side = sample(c('heads', 'tails'), size = 10, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') +
default_ggplot_theme + theme(legend.position = 'none')
data.frame(side = sample(c('heads', 'tails'), size = 10, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Count') +
default_ggplot_theme + theme(legend.position = 'none')
data.frame(side = sample(c('heads', 'tails'), size = 10, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
default_ggplot_theme + theme(legend.position = 'none')
data.frame(side = sample(c('heads', 'tails'), size = 10, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
default_ggplot_theme  <- theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(size = 14, colour = 'black'),
axis.text = element_text(size = 12, colour = 'black'),
panel.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
legend.position = 'bottom',
legend.background = element_rect(linewidth = 1, colour = 'black', fill = NA)
)
data.frame(side = sample(c('Heads', 'Tails'), size = 10, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
coin_10 <- data.frame(side = sample(c('Heads', 'Tails'), size = 10, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
coin_1k <- data.frame(side = sample(c('Heads', 'Tails'), size = 1000, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
coin_10k <- data.frame(side = sample(c('Heads', 'Tails'), size = 10000, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
library(dplyr); library(ggplot2); library(cowplot)
library(dplyr); library(ggplot2); library(cowplot)
knitr::opts_chunk$set(
fig.align = "center",
fig.height = 4,
fig.width = 6,
comment = NA,
dev = "pdf",
size = "small",
tidy = TRUE
)
default_ggplot_theme  <- theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(size = 14, colour = 'black'),
axis.text = element_text(size = 12, colour = 'black'),
panel.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
legend.position = 'bottom',
legend.background = element_rect(linewidth = 1, colour = 'black', fill = NA)
)
cowplot::plot_grid(coin_10, coin_100, coin_1k, coin_10k)
coin_10 <- data.frame(side = sample(c('Heads', 'Tails'), size = 10, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
coin_1k <- data.frame(side = sample(c('Heads', 'Tails'), size = 1000, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
coin_10k <- data.frame(side = sample(c('Heads', 'Tails'), size = 10000, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
cowplot::plot_grid(coin_10, coin_100, coin_1k, coin_10k)
cowplot::plot_grid(coin_10, coin_100, coin_1k, coin_10k,
labels = c('10', '100', '1k', '10k'),
ncol = 2)
coin_100 <- data.frame(side = sample(c('Heads', 'Tails'), size = 100, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
coin_1k <- data.frame(side = sample(c('Heads', 'Tails'), size = 1000, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
coin_10k <- data.frame(side = sample(c('Heads', 'Tails'), size = 10000, replace = TRUE)) %>%
ggplot(aes(x = side, group = side)) +
geom_bar(aes(fill = side), colour = 'black') + labs(x ='', y = 'Flips\n') +
geom_hline(yintercept = 0) + default_ggplot_theme + theme(legend.position = 'none')
cowplot::plot_grid(coin_10, coin_100, coin_1k, coin_10k,
labels = c('10', '100', '1k', '10k'),
ncol = 2)
default_ggplot_theme  <- theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(size = 12, colour = 'black'),
axis.text = element_text(size = 10, colour = 'black'),
panel.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
legend.position = 'bottom',
legend.background = element_rect(linewidth = 1, colour = 'black', fill = NA)
)
library(dplyr); library(ggplot2); library(cowplot)
knitr::opts_chunk$set(
warning = FALSE,
fig.align = "center",
comment = NA,
dev = "pdf",
size = "small",
tidy = TRUE
)
default_ggplot_theme  <- theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, size = 12),
axis.title = element_text(size = 12, colour = 'black'),
axis.text = element_text(size = 10, colour = 'black'),
panel.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
legend.position = 'bottom',
legend.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
)
sides <- c(1:6) # 1, 2, 3, 4, 5, 6
sides <- c(1:6) # 1, 2, 3, 4, 5, 6
single_roll <- c(sides, size = 1) # Single Roll
print(single_roll)
single_roll
sample(sides)
sample(sides, 1)
sample(sides, 1)
sample(sides, 1)
sample(sides, 1)
sample(sides, 1)
cards <- as.character(c(2:10, 'J', 'Q', 'K', 'A')) # All Card Values
suits <- c('Hearts', 'Diamonds', 'Spades', 'Clovers') # Suits
available_cards <- paste0(cards, ' of ', suits)
cards <- as.character(c(2:10, 'J', 'Q', 'K', 'A')) # All Card Values
suits <- c('Hearts', 'Diamonds', 'Spades', 'Clubs') # Suits
available_cards <- expand.grid(Value = cards, Suit = suits) %>%
mutate(card = paste(Value, "of", Suit)) %>%
pull(card) # Create a Full Deck
available_cards
library(dplyr); library(ggplot2); library(cowplot)
knitr::opts_chunk$set(
warning = FALSE,
fig.align = "center",
comment = NA,
dev = "pdf",
size = "tiny",
tidy = TRUE
)
default_ggplot_theme  <- theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, size = 12),
axis.title = element_text(size = 12, colour = 'black'),
axis.text = element_text(size = 10, colour = 'black'),
panel.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
legend.position = 'bottom',
legend.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
)
message('Hand: ', paste(random_draw, sep = '\n'))
cards <- as.character(c(2:10, 'J', 'Q', 'K', 'A')) # All Card Values
suits <- c('Hearts', 'Diamonds', 'Spades', 'Clubs') # Suits
available_cards <- expand.grid(Value = cards, Suit = suits) %>%
mutate(card = paste(Value, "of", Suit)) %>%
pull(card) # Create a Full Deck
random_draw <- sample(available_cards, size = 5, replace = F) # Random 5-Card Draw w/out Replacement
message('Hand: ', paste(random_draw, sep = '\n'))
message('Hand: ', paste(random_draw, collapse = '\n'))
message('Hand: \n', paste(random_draw, collapse = '\n'))
install.packages("formatR")
library(dplyr); library(ggplot2); library(cowplot); library(formatR)
knitr::opts_chunk$set(
warning = FALSE,
fig.align = "center",
comment = NA,
dev = "pdf",
size = "tiny",
tidy = TRUE
)
default_ggplot_theme  <- theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, size = 12),
axis.title = element_text(size = 12, colour = 'black'),
axis.text = element_text(size = 10, colour = 'black'),
panel.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
legend.position = 'bottom',
legend.background = element_rect(linewidth = 1, colour = 'black', fill = NA),
)
normal <- rnorm(1000, mean = 0, sd = 1) # Standard Normal (Mean = 0, SD = 1)
normal
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_bar(fill = 'grey', colour = 'black', bins = 30) +
default_ggplot_theme
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = 'grey', colour = 'black', bins = 30) +
default_ggplot_theme
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = 'grey', colour = 'black', bins = 30) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
default_ggplot_theme
normal <- rnorm(1000, mean = 50, sd = 10) # Standard Normal (Mean = 50, SD = 10)
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = 'grey', colour = 'black', bins = 30) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
default_ggplot_theme
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = 'grey', colour = 'black', bins = 30) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
labs(x = '\nValue',
y = '\nCount\n') +
default_ggplot_theme
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = 'grey', colour = 'black', bins = 30) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
labs(x = '\nValue',
y = '\nCount\n') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = 'grey', colour = 'black', bins = 30) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red", size = 1.2) +
labs(x = ' ',
y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme + theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_density(fill = 'grey', colour = 'black', bins = 30) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), color = "red", size = 1.2) +
labs(x = ' ',
y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme + theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_density(fill = 'grey', colour = 'black', bins = 30) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
stat_function(fun = dnorm, args = list(mean = 50, sd = 10), color = "red", size = 1.2) +
labs(x = ' ',
y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme + theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_density(fill = 'grey', colour = 'black', bins = 30, alpha = 1/3) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
stat_function(fun = dnorm, args = list(mean = 50, sd = 10), color = "red", size = 1.2) +
labs(x = ' ',
y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme + theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_density(fill = 'grey', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
stat_function(fun = dnorm, args = list(mean = 50, sd = 10), color = "red", size = 1.2) +
labs(x = ' ',
y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme + theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = 'grey', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
stat_function(fun = dnorm, args = list(mean = 50, sd = 10), color = "red", size = 1.2) +
geom_hline(yintercept = 0) +
labs(x = ' ',
y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme + theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(stat = 'density', fill = 'grey', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
stat_function(fun = dnorm, args = list(mean = 50, sd = 10), color = "red", size = 1.2) +
geom_hline(yintercept = 0) +
labs(x = ' ',
y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme + theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = 'grey', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
stat_function(fun = dnorm, args = list(mean = 50, sd = 10), color = "red", size = 1.2) +
geom_hline(yintercept = 0) +
labs(x = ' ',
y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme + theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'grey', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 50, linetype = 2, colour = 'red', linewidth = 1.25) +
stat_function(fun = function(x) dnorm(x, mean = 50, sd = 10) * length(normal) * diff(range(normal))/30,
color = "red", size = 1.2) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme +
theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'grey', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 50, linetype = 2, colour = 'skyblue3', linewidth = 1.25) +
stat_function(fun = function(x) dnorm(x, mean = 50, sd = 10) * length(normal) * diff(range(normal))/30,
color = "red", size = 1) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme +
theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 50, linetype = 2, colour = 'black', linewidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = 50, sd = 10) * length(normal) * diff(range(normal))/30,
color = "red", size = 1) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme +
theme(axis.text.y = element_blank())
directory <- "D:\WI"
directory <- "D:/WI"
directory <- "D:/WI"
for (i in c(1990:2024)){
temp_year <- i
dir.create(file.path(directory, i))
}
list.files(directory)
list.files(directory)
c(1990:2024)
file.path(directory, '1990')
paste0(directory, '/', '1990')
for (i in c(1990:2024)){
dir.create(file.path(directory, i))
print(i)
}
set.seed(1234)
c <- runif(1000, min = 0 , max = 1000)
summary(c)
c
c <- data.frame(value = c)
c %>%
ggplot(aes(x = value)) +
geom_density()
c %>%
ggplot(aes(x = value)) +
geom_histogram()
data.frame(value = runif(1000, min = 0, max = 1000)) %>%
ggplot(aes(x = value)) +
geom_density()
set.seed(1234)
normal <- rnorm(n = 1000,
mean = 50,
sd = 10)
normal <- rnorm(n = 1000,
mean = 50,
sd = 10)
normal <- data.frame(x = normal)
normal
ggplot(data = normal, aes(x = x)) +
geom_density()
hist(normal$x)
### Generating Distributions (Standard Normal -- Ex)
```{r normal_distribution, echo=TRUE, tidy=TRUE}
normal <- rnorm(1000, mean = 25, sd = 10)
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 25, linetype = 2, colour = 'black', linewidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = 50, sd = 10) * length(normal) * diff(range(normal))/30,
color = "red", size = 1) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme +
theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 25, linetype = 2, colour = 'black', linewidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = 25, sd = 10) * length(normal) * diff(range(normal))/30,
color = "red", size = 1) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
default_ggplot_theme +
theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 25, linetype = 2, colour = 'black', linewidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = 25, sd = 10) * length(normal) * diff(range(normal))/30,
color = "red", size = 1) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
scale_x_continuous(breaks = seq(5, 55, 5)) +
default_ggplot_theme +
theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 25, linetype = 2, colour = 'black', linewidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = 25, sd = 10) * length(normal) * diff(range(normal))/30,
color = "red", size = 1) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
scale_x_continuous(breaks = seq(5, 45, 5)) +
default_ggplot_theme +
theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 25, linetype = 2, colour = 'black', linewidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = 25, sd = 10) * length(normal) * diff(range(normal))/30,
color = "red", size = 1) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
scale_x_continuous(breaks = seq(-5, 55, 5)) +
default_ggplot_theme +
theme(axis.text.y = element_blank())
data.frame(value = normal) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 25, linetype = 2, colour = 'black', linewidth = 1) +
stat_function(fun = function(x) dnorm(x, mean = 25, sd = 10) * length(normal) * diff(range(normal))/30,
color = "red", size = 1) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
scale_y_continuous(breaks = seq(25, 100, 25)) +
scale_x_continuous(breaks = seq(-5, 55, 10)) +
default_ggplot_theme +
theme(axis.text.y = element_blank())
normal <- rexp(1000, rate = 2)
exp <- rexp(1000, rate = 2)
data.frame(value = exp) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
geom_vline(xintercept = 25, linetype = 2, colour = 'black', linewidth = 1)
exp <- rexp(1000, rate = 0.5)
data.frame(value = exp) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2)
data.frame(value = exp) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(count)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
stat_function(fun = function(x) dexp(x, rate = 0.5),
color = "red", size = 1)
data.frame(value = exp) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(density)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
stat_function(fun = function(x) dexp(x, rate = 0.5),
color = "red", size = 1)
exp <- rexp(1000, rate = 2)
data.frame(value = exp) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(density)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
stat_function(fun = function(x) dexp(x, rate = 2),
color = "red", size = 1)
data.frame(value = exp) %>%
ggplot(aes(x = value)) +
geom_histogram(aes(y = after_stat(density)), fill = 'skyblue4', colour = 'black', bins = 30, alpha = 1/2) +
stat_function(fun = function(x) dexp(x, rate = 2),
color = "red", size = 1) +
geom_hline(yintercept = 0) +
labs(x = ' ', y = ' ') +
default_ggplot_theme +
theme(axis.text.y = element_blank())
getwd()
library(xml2)
unzip("C:/Users/jaketruscott/Downloads/Ammar Mansuri’s Critical Response Essay.docx", files = c("docProps/core.xml", "docProps/app.xml"), exdir = tempdir())
zip::zip_list("C:/Users/jaketruscott/Downloads/Ammar Mansuri’s Critical Response Essay.docx")
unzip("C:/Users/jaketruscott/Downloads/Ammar Mansuri’s Critical Response Essay.docx",
files = "word/document.xml", exdir = tempdir())
doc_path <- file.path(tempdir(), "word/document.xml")
doc <- read_xml(doc_path)
ns <- xml_ns(doc)  # extract namespaces
# Count insertions and deletions
insertions <- xml_find_all(doc, ".//w:ins", ns)
deletions  <- xml_find_all(doc, ".//w:del", ns)
cat("Insertions:", length(insertions), "\n")
cat("Deletions:", length(deletions), "\n")
tempdir()
file_info <- file.info("C:/Users/jaketruscott/Downloads/Ammar Mansuri’s Critical Response Essay.docx")
file_info[c("ctime", "mtime", "atime")]
file_info <- file.info("C:/Users/jaketruscott/Downloads/Ammar Mansuri’s Critical Response Essay (2) (1).docx")
file_info[c('ctime')]
